#!/bin/sh

# Created By: Javier Pacheco - javier@jpacheco.xyz
# Created On: 23/03/24
# Project: A venomlinux scratch utility
# Dependencies: wget fzf

# Define color variables
BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
WHITE='\033[0;37m'
BOLD='\033[1m'
END='\033[0m'

# [[ Variables ]]

# Ports directories:
smain=/usr/ports/main/
custom=/home/javier/.local/src/ports/

# fuzzy finder opt
fz="fzf"

# Define a list of the scratch commands
actions="install simple_update full_update update_ports remove purge cache"

# Dependencies needed.
dependencies="wget fzf" 

# [[ Functions ]]

# Greeting
initial_msg() {
    printf "${BOLD}:: Welcome to the venomlinux scratch utility\n${END}"
}

# Install a port.
ins() { 
    opt=$(find $smain $custom -maxdepth 1 -mindepth 1 -type d -printf "%f\n"  | sort -u | \
        $fz --prompt="Select package{s} to install: ") 
    [ -z "$opt" ] || doas scratch install "$opt" && exit
}


# Simple update, sync and sys update
s_update() {
        doas scratch sync && doas scratch sysup && doas revdep -ry
}

# Full_update, purge, remove orphans, clean cache.
f_update() {
        doas scratch sync && \
            doas scratch sysup && \
            doas scratch purge && \
            doas scratch cache -y && \
            doas scratch missingdep && \
            doas scratch integrity && \
            doas revdep -r || printf "${RED}${BOLD}:: Update fails, run scratch sysup...\n${END}"
}

# Delete a port.
del() {
	opt=$(ls $(pkgadd --print-dbdir) | $fz --prompt="Select package{s} to remove: ")
	[ -z "$opt" ] || doas scratch remove "$opt" && exit
}

# Purge a port.
purg() {
	opt=$(ls $(pkgadd --print-dbdir) | $fz --prompt="Select package{s} to remove: ")
	[ -z "$opt" ] || doas scratch purge "$opt" && exit
}

# Function to check if a dependency is installed
check_dependency() {
    command -v "$1" >/dev/null 2>&1 || { printf >&2 "${RED}Error: Please install required dependencies and try it again.\nDependencies:\n\n${BOLD}:: wget\n:: ${BOLD}fzf\n${END}"; exit 1 ; }
}

# Check if each dependency are installed.
check_deps(){
    for dep in $dependencies; do
        check_dependency "$dep"
    done
}

# Function to check internet connectivity
check_internet() {
    wget -q --spider http://google.com
    if [ $? -gt 0 ]; then
        printf "${RED}${BOLD}Error: No internet connection. Script will now exit.\n${END}"
        exit 1
    fi
}

# [[ Sequence ]]

clear
initial_msg
check_internet
check_deps

if [ "$#" -gt 0 ]; then
case "$1" in
    "-i")
        printf "${GREEN}${BOLD}What port do you want to install: \n${END}"
        ins && notify-send "Venom - Linux" "Package installed succesfully" 
        printf "${GREEN}${BOLD}:: Port $opt was succesfully installed.\n${END}"
        ;;
    "-S")
        f_update && pkill -SIGRTMIN+8 waybar
        notify-send "Venom - Linux" "Your system is up to date" 
        # clear
        printf "${CYAN}${BOLD}:: Your system is now up to date\n${END}"
        ;;
    "-s")
        s_update && pkill -SIGRTMIN+8 waybar
        notify-send "Venom - Linux" "Your system is up to date" 
        # clear
        printf "${CYAN}${BOLD}:: Your system is now up to date\n${END}"
        ;;
    "-u")
        # clear
        doas portsync && notify-send "Venom - Linux" "Venom ports updated." 
        # clear
        printf "${GREEN}${BOLD}:: Venom ports are now up to date\n${END}"
        ;;
    "-r")
        printf "${RED}${BOLD}What port do you want to remove: \n${END}"
        del && notify-send "Venom - Linux" "Package removed succesfully" 
        printf "${RED}${BOLD}:: Port $opt removed from your system.\n${END}"
        ;;
    "-p")
        printf "${RED}${BOLD}What port do you want to purge: \n${END}"
        purg && notify-send "Venom - Linux" "Packages removed succesfully" 
        printf "${RED}${BOLD}:: Port $opt and its denendencies are removed from your system.\n${END}"
        ;;
    "-c") 
        # clear
        printf "${CYAN}${BOLD}:: Cleaning your venom system cache...\n${END}"
        doas scratch cache && notify-send "Venom - Linux" "Venom cache cleaned." 
        printf "${CYAN}${BOLD}:: Your venom system cache is cleaned\n${END}"
        ;;
    *)
        clear && exit
        ;;
esac
else
printf "${CYAN}${BOLD}:: What do you want to do?\n${END}"
selected_action=$(printf '%s\n' $actions | $fz)

case $selected_action in
    install)
        printf "${GREEN}${BOLD}What port do you want to install: \n${END}"
        ins && notify-send "Venom - Linux" "Package installed succesfully" 
        printf "${GREEN}${BOLD}:: Port $opt was succesfully installed.\n${END}"
        ;;
    full_update)
        f_update && pkill -SIGRTMIN+8 waybar
        notify-send "Venom - Linux" "Your system is up to date" 
        # clear
        printf "${CYAN}${BOLD}:: Your system is now up to date\n${END}"
        ;;
    simple_update)
        s_update && pkill -SIGRTMIN+8 waybar
        notify-send "Venom - Linux" "Your system is up to date" 
        # clear
        printf "${CYAN}${BOLD}:: Your system is now up to date\n${END}"
        ;;
    update_ports)
        # clear
        doas portsync && notify-send "Venom - Linux" "Venom ports updated." 
        # clear
        printf "${GREEN}${BOLD}:: Venom ports are now up to date\n${END}"
        ;;
    remove)
        printf "${RED}${BOLD}What port do you want to remove: \n${END}"
        del && notify-send "Venom - Linux" "Package removed succesfully" 
        printf "${RED}${BOLD}:: Port $opt removed from your system.\n${END}"
        ;;
    purge)
        printf "${RED}${BOLD}What port do you want to purge: \n${END}"
        purg && notify-send "Venom - Linux" "Packages removed succesfully" 
        printf "${RED}${BOLD}:: Port $opt and its denendencies are removed from your system.\n${END}"
        ;;
    cache) 
        # clear
        printf "${CYAN}${BOLD}:: Cleaning your venom system cache...\n${END}"
        doas scratch cache && notify-send "Venom - Linux" "Venom cache cleaned." 
        printf "${CYAN}${BOLD}:: Your venom system cache is cleaned\n${END}"
        ;;
    *)
        clear && exit
        ;;
esac
fi
